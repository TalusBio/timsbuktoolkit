name: Release

on:
  push:
    tags:
      - 'v[0-9]+.*' # Trigger on version tags

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: '.exe'
          - os: macos-latest
            target: x86_64-apple-darwin
            suffix: ''

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      # Gather all binaries from the workspace
      - name: Prepare binaries
        shell: bash
        run: |
          mkdir artifacts
          for binary in $(cargo metadata --format-version=1 | jq -r '.workspace_members[] | split(" ") | .[0]'); do
            cp target/${{ matrix.target }}/release/$binary${{ matrix.suffix }} artifacts/
          done
          cd artifacts
          tar czf ../${{ matrix.target }}.tar.gz *

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.target }}.tar.gz
          asset_name: ${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip